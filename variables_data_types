a variable is name, classname or method name

Rules to define identifiers in python
1) alphabet symbols(both upper and lower case are allowed) 
2) digits
3) underscore(_)

4) identifiers should not start with digits 
5)identifiers are case sensitive 
6)there is no length limit for identifiers 
7) if an identifier starts with a underscore it is private   
8) _ _name_ _ (language specific identifiers) 

Reserved keywords in python
1) and: A logical operator.
2) as: Used to create an alias.
3)assert: For debugging purposes.
4)break: To exit a loop.
5)class: To define a class.
6)continue: To continue to the next iteration of a loop.
7)def: To define a function.
8)del: To delete an object.
9)elif: Used in conditional statements (similar to else if).
10)else: Used in conditional statements.
11)except: Used with exceptions to handle errors.
12)False: Represents a Boolean value (result of comparison operations).
13)finally: Used with exceptions to execute code regardless of exceptions.
14)for: To create a for loop.
15)from: To import specific parts of a module.
16)global: To declare a global variable.
17)if: To create a conditional statement.
18)import: To import a module.
19)in: To check if a value is present in a list, tuple, etc.
20)is: To test if two variables are equal.
21)lambda: To create an anonymous function.
22)None: Represents a null value.
23)nonlocal: To declare a non-local variable.
24)not: A logical operator.
25)or: A logical operator.
26)pass: A null statement (does nothing).
27)raise: To raise an exception.
28)return: To exit a function and return a value.
29)True: Represents a Boolean value (result of comparison operations).
30)try: To create a try...except statement.
31)while: To create a while loop.
32)with: Used for context management.
33)yield: To return a list of values from a generator.

Data Types:-
  1) int 
  2) float
  3) complex
  4) bool
  5) string
  6) byte
  7) bytearray
  8) range
  9) list
  10) tuple
  11) set
  12) frozenset
  13) dictionary
  14) None


  
  

